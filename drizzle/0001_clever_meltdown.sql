CREATE TABLE IF NOT EXISTS "legacy-grow-app_area" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "legacy-grow-app_area_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"facility_id" integer,
	"name" varchar(255) NOT NULL,
	"type" varchar(50) NOT NULL,
	"parent_id" integer,
	"dimensions" json,
	"capacity" json,
	"environment" json,
	"status" varchar(50),
	"created_by" varchar(255) NOT NULL,
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "legacy-grow-app_compliance_log" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "legacy-grow-app_compliance_log_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"type" varchar(50) NOT NULL,
	"category" varchar(50) NOT NULL,
	"details" json,
	"attachments" json,
	"status" varchar(50),
	"verified_by" varchar(255),
	"verified_at" timestamp with time zone,
	"created_by" varchar(255) NOT NULL,
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "legacy-grow-app_facility" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "legacy-grow-app_facility_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"name" varchar(255) NOT NULL,
	"type" varchar(50) NOT NULL,
	"address" text,
	"license" varchar(255),
	"capacity" json,
	"properties" json,
	"created_by" varchar(255) NOT NULL,
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "legacy-grow-app_genetic" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "legacy-grow-app_genetic_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"name" varchar(255) NOT NULL,
	"type" varchar(50) NOT NULL,
	"breeder" varchar(255),
	"description" text,
	"flowering_time" integer,
	"thc_potential" numeric,
	"cbd_potential" numeric,
	"terpene_profile" json,
	"growth_characteristics" json,
	"lineage" json,
	"created_by" varchar(255) NOT NULL,
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "legacy-grow-app_harvest" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "legacy-grow-app_harvest_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"plant_id" integer,
	"batch_id" varchar(255) NOT NULL,
	"date" date NOT NULL,
	"wet_weight" numeric,
	"dry_weight" numeric,
	"trim_weight" numeric,
	"waste_weight" numeric,
	"location" varchar(255),
	"quality" varchar(50),
	"notes" text,
	"lab_results" json,
	"created_by" varchar(255) NOT NULL,
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "legacy-grow-app_input" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "legacy-grow-app_input_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"name" varchar(255) NOT NULL,
	"type" varchar(50) NOT NULL,
	"supplier_id" integer,
	"manufacturer" varchar(255),
	"composition" json,
	"application_methods" json,
	"safety_data" json,
	"storage" json,
	"certifications" json,
	"created_by" varchar(255) NOT NULL,
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "legacy-grow-app_location" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "legacy-grow-app_location_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"area_id" integer,
	"name" varchar(255) NOT NULL,
	"type" varchar(50) NOT NULL,
	"coordinates" json,
	"properties" json,
	"created_by" varchar(255) NOT NULL,
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "legacy-grow-app_plant" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "legacy-grow-app_plant_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"genetic_id" integer,
	"batch_id" varchar(255),
	"source" varchar(50),
	"stage" varchar(50),
	"plant_date" date,
	"harvest_date" date,
	"mother_id" integer,
	"generation" integer,
	"sex" varchar(50),
	"phenotype" varchar(255),
	"health_status" varchar(50),
	"quarantine" boolean DEFAULT false,
	"destroy_reason" varchar(255),
	"location_id" integer,
	"created_by" varchar(255) NOT NULL,
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "legacy-grow-app_processing" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "legacy-grow-app_processing_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"harvest_id" integer,
	"type" varchar(50) NOT NULL,
	"start_date" timestamp with time zone,
	"end_date" timestamp with time zone,
	"input_weight" numeric,
	"output_weight" numeric,
	"yield" numeric,
	"method" varchar(255),
	"equipment" json,
	"parameters" json,
	"notes" text,
	"lab_results" json,
	"created_by" varchar(255) NOT NULL,
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "legacy-grow-app_sensor_reading" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "legacy-grow-app_sensor_reading_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"sensor_id" integer,
	"value" numeric NOT NULL,
	"unit" varchar(50) NOT NULL,
	"quality" varchar(50),
	"metadata" json,
	"timestamp" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "legacy-grow-app_sensor" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "legacy-grow-app_sensor_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"name" varchar(255) NOT NULL,
	"type" varchar(50) NOT NULL,
	"model" varchar(255),
	"location_id" integer,
	"calibration_date" date,
	"calibration_due" date,
	"accuracy" numeric,
	"range" json,
	"metadata" json,
	"created_by" varchar(255) NOT NULL,
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "legacy-grow-app_supplier" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "legacy-grow-app_supplier_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"name" varchar(255) NOT NULL,
	"type" varchar(50) NOT NULL,
	"contact" json,
	"address" text,
	"license" varchar(255),
	"status" varchar(50),
	"rating" integer,
	"notes" text,
	"created_by" varchar(255) NOT NULL,
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "legacy-grow-app_system_log" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "legacy-grow-app_system_log_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"level" varchar(50) NOT NULL,
	"source" varchar(255) NOT NULL,
	"message" text NOT NULL,
	"metadata" json,
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "legacy-grow-app_task_template" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "legacy-grow-app_task_template_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"name" varchar(255) NOT NULL,
	"category" varchar(50) NOT NULL,
	"description" text,
	"instructions" json,
	"estimated_duration" integer,
	"required_skills" json,
	"checklist" json,
	"created_by" varchar(255) NOT NULL,
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "legacy-grow-app_task" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "legacy-grow-app_task_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"template_id" integer,
	"assigned_to" varchar(255),
	"status" varchar(50) NOT NULL,
	"priority" varchar(50) NOT NULL,
	"due_date" timestamp with time zone,
	"completed_at" timestamp with time zone,
	"notes" text,
	"metadata" json,
	"created_by" varchar(255) NOT NULL,
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp with time zone
);
--> statement-breakpoint
DROP TABLE "legacy-grow-app_post";--> statement-breakpoint
ALTER TABLE "legacy-grow-app_user" ADD COLUMN "role" varchar(50) DEFAULT 'user' NOT NULL;--> statement-breakpoint
ALTER TABLE "legacy-grow-app_user" ADD COLUMN "active" boolean DEFAULT true;--> statement-breakpoint
ALTER TABLE "legacy-grow-app_user" ADD COLUMN "permissions" json;--> statement-breakpoint
ALTER TABLE "legacy-grow-app_user" ADD COLUMN "preferences" json;--> statement-breakpoint
ALTER TABLE "legacy-grow-app_user" ADD COLUMN "last_login" timestamp with time zone;--> statement-breakpoint
ALTER TABLE "legacy-grow-app_user" ADD COLUMN "created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL;--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "legacy-grow-app_area" ADD CONSTRAINT "legacy-grow-app_area_facility_id_legacy-grow-app_facility_id_fk" FOREIGN KEY ("facility_id") REFERENCES "public"."legacy-grow-app_facility"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "legacy-grow-app_area" ADD CONSTRAINT "legacy-grow-app_area_created_by_legacy-grow-app_user_id_fk" FOREIGN KEY ("created_by") REFERENCES "public"."legacy-grow-app_user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "legacy-grow-app_compliance_log" ADD CONSTRAINT "legacy-grow-app_compliance_log_verified_by_legacy-grow-app_user_id_fk" FOREIGN KEY ("verified_by") REFERENCES "public"."legacy-grow-app_user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "legacy-grow-app_compliance_log" ADD CONSTRAINT "legacy-grow-app_compliance_log_created_by_legacy-grow-app_user_id_fk" FOREIGN KEY ("created_by") REFERENCES "public"."legacy-grow-app_user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "legacy-grow-app_facility" ADD CONSTRAINT "legacy-grow-app_facility_created_by_legacy-grow-app_user_id_fk" FOREIGN KEY ("created_by") REFERENCES "public"."legacy-grow-app_user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "legacy-grow-app_genetic" ADD CONSTRAINT "legacy-grow-app_genetic_created_by_legacy-grow-app_user_id_fk" FOREIGN KEY ("created_by") REFERENCES "public"."legacy-grow-app_user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "legacy-grow-app_harvest" ADD CONSTRAINT "legacy-grow-app_harvest_plant_id_legacy-grow-app_plant_id_fk" FOREIGN KEY ("plant_id") REFERENCES "public"."legacy-grow-app_plant"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "legacy-grow-app_harvest" ADD CONSTRAINT "legacy-grow-app_harvest_created_by_legacy-grow-app_user_id_fk" FOREIGN KEY ("created_by") REFERENCES "public"."legacy-grow-app_user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "legacy-grow-app_input" ADD CONSTRAINT "legacy-grow-app_input_supplier_id_legacy-grow-app_supplier_id_fk" FOREIGN KEY ("supplier_id") REFERENCES "public"."legacy-grow-app_supplier"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "legacy-grow-app_input" ADD CONSTRAINT "legacy-grow-app_input_created_by_legacy-grow-app_user_id_fk" FOREIGN KEY ("created_by") REFERENCES "public"."legacy-grow-app_user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "legacy-grow-app_location" ADD CONSTRAINT "legacy-grow-app_location_area_id_legacy-grow-app_area_id_fk" FOREIGN KEY ("area_id") REFERENCES "public"."legacy-grow-app_area"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "legacy-grow-app_location" ADD CONSTRAINT "legacy-grow-app_location_created_by_legacy-grow-app_user_id_fk" FOREIGN KEY ("created_by") REFERENCES "public"."legacy-grow-app_user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "legacy-grow-app_plant" ADD CONSTRAINT "legacy-grow-app_plant_genetic_id_legacy-grow-app_genetic_id_fk" FOREIGN KEY ("genetic_id") REFERENCES "public"."legacy-grow-app_genetic"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "legacy-grow-app_plant" ADD CONSTRAINT "legacy-grow-app_plant_location_id_legacy-grow-app_location_id_fk" FOREIGN KEY ("location_id") REFERENCES "public"."legacy-grow-app_location"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "legacy-grow-app_plant" ADD CONSTRAINT "legacy-grow-app_plant_created_by_legacy-grow-app_user_id_fk" FOREIGN KEY ("created_by") REFERENCES "public"."legacy-grow-app_user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "legacy-grow-app_processing" ADD CONSTRAINT "legacy-grow-app_processing_harvest_id_legacy-grow-app_harvest_id_fk" FOREIGN KEY ("harvest_id") REFERENCES "public"."legacy-grow-app_harvest"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "legacy-grow-app_processing" ADD CONSTRAINT "legacy-grow-app_processing_created_by_legacy-grow-app_user_id_fk" FOREIGN KEY ("created_by") REFERENCES "public"."legacy-grow-app_user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "legacy-grow-app_sensor_reading" ADD CONSTRAINT "legacy-grow-app_sensor_reading_sensor_id_legacy-grow-app_sensor_id_fk" FOREIGN KEY ("sensor_id") REFERENCES "public"."legacy-grow-app_sensor"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "legacy-grow-app_sensor" ADD CONSTRAINT "legacy-grow-app_sensor_location_id_legacy-grow-app_location_id_fk" FOREIGN KEY ("location_id") REFERENCES "public"."legacy-grow-app_location"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "legacy-grow-app_sensor" ADD CONSTRAINT "legacy-grow-app_sensor_created_by_legacy-grow-app_user_id_fk" FOREIGN KEY ("created_by") REFERENCES "public"."legacy-grow-app_user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "legacy-grow-app_supplier" ADD CONSTRAINT "legacy-grow-app_supplier_created_by_legacy-grow-app_user_id_fk" FOREIGN KEY ("created_by") REFERENCES "public"."legacy-grow-app_user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "legacy-grow-app_task_template" ADD CONSTRAINT "legacy-grow-app_task_template_created_by_legacy-grow-app_user_id_fk" FOREIGN KEY ("created_by") REFERENCES "public"."legacy-grow-app_user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "legacy-grow-app_task" ADD CONSTRAINT "legacy-grow-app_task_template_id_legacy-grow-app_task_template_id_fk" FOREIGN KEY ("template_id") REFERENCES "public"."legacy-grow-app_task_template"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "legacy-grow-app_task" ADD CONSTRAINT "legacy-grow-app_task_assigned_to_legacy-grow-app_user_id_fk" FOREIGN KEY ("assigned_to") REFERENCES "public"."legacy-grow-app_user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "legacy-grow-app_task" ADD CONSTRAINT "legacy-grow-app_task_created_by_legacy-grow-app_user_id_fk" FOREIGN KEY ("created_by") REFERENCES "public"."legacy-grow-app_user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "area_name_idx" ON "legacy-grow-app_area" USING btree ("name");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "area_type_idx" ON "legacy-grow-app_area" USING btree ("type");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "area_facility_id_idx" ON "legacy-grow-app_area" USING btree ("facility_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "compliance_log_type_idx" ON "legacy-grow-app_compliance_log" USING btree ("type");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "compliance_log_category_idx" ON "legacy-grow-app_compliance_log" USING btree ("category");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "compliance_log_status_idx" ON "legacy-grow-app_compliance_log" USING btree ("status");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "facility_name_idx" ON "legacy-grow-app_facility" USING btree ("name");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "facility_type_idx" ON "legacy-grow-app_facility" USING btree ("type");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "facility_created_by_idx" ON "legacy-grow-app_facility" USING btree ("created_by");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "genetic_name_idx" ON "legacy-grow-app_genetic" USING btree ("name");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "genetic_type_idx" ON "legacy-grow-app_genetic" USING btree ("type");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "genetic_created_by_idx" ON "legacy-grow-app_genetic" USING btree ("created_by");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "harvest_batch_id_idx" ON "legacy-grow-app_harvest" USING btree ("batch_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "harvest_date_idx" ON "legacy-grow-app_harvest" USING btree ("date");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "harvest_plant_id_idx" ON "legacy-grow-app_harvest" USING btree ("plant_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "input_name_idx" ON "legacy-grow-app_input" USING btree ("name");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "input_type_idx" ON "legacy-grow-app_input" USING btree ("type");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "input_supplier_id_idx" ON "legacy-grow-app_input" USING btree ("supplier_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "location_name_idx" ON "legacy-grow-app_location" USING btree ("name");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "location_type_idx" ON "legacy-grow-app_location" USING btree ("type");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "location_area_id_idx" ON "legacy-grow-app_location" USING btree ("area_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "plant_batch_id_idx" ON "legacy-grow-app_plant" USING btree ("batch_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "plant_stage_idx" ON "legacy-grow-app_plant" USING btree ("stage");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "plant_created_by_idx" ON "legacy-grow-app_plant" USING btree ("created_by");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "plant_genetic_id_idx" ON "legacy-grow-app_plant" USING btree ("genetic_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "plant_location_id_idx" ON "legacy-grow-app_plant" USING btree ("location_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "processing_harvest_id_idx" ON "legacy-grow-app_processing" USING btree ("harvest_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "processing_type_idx" ON "legacy-grow-app_processing" USING btree ("type");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "processing_start_date_idx" ON "legacy-grow-app_processing" USING btree ("start_date");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "sensor_reading_sensor_id_idx" ON "legacy-grow-app_sensor_reading" USING btree ("sensor_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "sensor_reading_timestamp_idx" ON "legacy-grow-app_sensor_reading" USING btree ("timestamp");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "sensor_name_idx" ON "legacy-grow-app_sensor" USING btree ("name");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "sensor_type_idx" ON "legacy-grow-app_sensor" USING btree ("type");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "sensor_location_id_idx" ON "legacy-grow-app_sensor" USING btree ("location_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "supplier_name_idx" ON "legacy-grow-app_supplier" USING btree ("name");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "supplier_type_idx" ON "legacy-grow-app_supplier" USING btree ("type");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "supplier_status_idx" ON "legacy-grow-app_supplier" USING btree ("status");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "system_log_level_idx" ON "legacy-grow-app_system_log" USING btree ("level");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "system_log_source_idx" ON "legacy-grow-app_system_log" USING btree ("source");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "system_log_created_at_idx" ON "legacy-grow-app_system_log" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "task_template_name_idx" ON "legacy-grow-app_task_template" USING btree ("name");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "task_template_category_idx" ON "legacy-grow-app_task_template" USING btree ("category");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "task_status_idx" ON "legacy-grow-app_task" USING btree ("status");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "task_priority_idx" ON "legacy-grow-app_task" USING btree ("priority");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "task_assigned_to_idx" ON "legacy-grow-app_task" USING btree ("assigned_to");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "task_due_date_idx" ON "legacy-grow-app_task" USING btree ("due_date");