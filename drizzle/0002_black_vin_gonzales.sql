DO $$ BEGIN
 CREATE TYPE "public"."batch_status" AS ENUM('active', 'completed', 'cancelled');
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 CREATE TYPE "public"."genetic_type" AS ENUM('sativa', 'indica', 'hybrid');
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 CREATE TYPE "public"."harvest_quality" AS ENUM('A', 'B', 'C', 'D');
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 CREATE TYPE "public"."health_status" AS ENUM('healthy', 'sick', 'pest', 'nutrient', 'dead');
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 CREATE TYPE "public"."location_type" AS ENUM('room', 'section', 'bench', 'shelf');
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 CREATE TYPE "public"."log_level" AS ENUM('debug', 'info', 'warn', 'error');
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 CREATE TYPE "public"."plant_sex" AS ENUM('unknown', 'male', 'female', 'hermaphrodite');
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 CREATE TYPE "public"."plant_source" AS ENUM('seed', 'clone', 'mother');
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 CREATE TYPE "public"."plant_stage" AS ENUM('seedling', 'vegetative', 'flowering', 'harvested');
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 CREATE TYPE "public"."sensor_type" AS ENUM('temperature', 'humidity', 'co2', 'light', 'ph', 'ec');
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 CREATE TYPE "public"."system_log_source" AS ENUM('plants', 'harvests', 'tasks', 'system', 'auth', 'sensors');
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 CREATE TYPE "public"."task_category" AS ENUM('maintenance', 'feeding', 'environmental', 'harvest');
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 CREATE TYPE "public"."task_priority" AS ENUM('low', 'medium', 'high', 'urgent');
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 CREATE TYPE "public"."task_status" AS ENUM('pending', 'in_progress', 'completed', 'cancelled');
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 CREATE TYPE "public"."user_role" AS ENUM('user', 'admin', 'manager');
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "legacy-grow-app_batches" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "legacy-grow-app_batches_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"name" varchar(255) NOT NULL,
	"strain" varchar(255) NOT NULL,
	"start_date" timestamp with time zone DEFAULT now(),
	"end_date" timestamp with time zone,
	"status" "batch_status" DEFAULT 'active' NOT NULL,
	"plant_count" integer NOT NULL,
	"notes" text,
	"created_at" timestamp with time zone DEFAULT now(),
	"updated_at" timestamp with time zone DEFAULT now(),
	"user_id" varchar(255) NOT NULL
);
--> statement-breakpoint
ALTER TABLE "legacy-grow-app_genetic" ALTER COLUMN "type" SET DATA TYPE genetic_type;--> statement-breakpoint
ALTER TABLE "legacy-grow-app_harvest" ALTER COLUMN "quality" SET DATA TYPE harvest_quality;--> statement-breakpoint
ALTER TABLE "legacy-grow-app_location" ALTER COLUMN "type" SET DATA TYPE location_type;--> statement-breakpoint
ALTER TABLE "legacy-grow-app_plant" ALTER COLUMN "batch_id" SET DATA TYPE integer;--> statement-breakpoint
ALTER TABLE "legacy-grow-app_plant" ALTER COLUMN "source" SET DATA TYPE plant_source;--> statement-breakpoint
ALTER TABLE "legacy-grow-app_plant" ALTER COLUMN "source" SET NOT NULL;--> statement-breakpoint
ALTER TABLE "legacy-grow-app_plant" ALTER COLUMN "stage" SET DATA TYPE plant_stage;--> statement-breakpoint
ALTER TABLE "legacy-grow-app_plant" ALTER COLUMN "stage" SET NOT NULL;--> statement-breakpoint
ALTER TABLE "legacy-grow-app_plant" ALTER COLUMN "sex" SET DATA TYPE plant_sex;--> statement-breakpoint
ALTER TABLE "legacy-grow-app_plant" ALTER COLUMN "health_status" SET DATA TYPE health_status;--> statement-breakpoint
ALTER TABLE "legacy-grow-app_plant" ALTER COLUMN "health_status" SET DEFAULT 'healthy';--> statement-breakpoint
ALTER TABLE "legacy-grow-app_plant" ALTER COLUMN "health_status" SET NOT NULL;--> statement-breakpoint
ALTER TABLE "legacy-grow-app_sensor" ALTER COLUMN "type" SET DATA TYPE sensor_type;--> statement-breakpoint
ALTER TABLE "legacy-grow-app_system_log" ALTER COLUMN "level" SET DATA TYPE log_level;--> statement-breakpoint
ALTER TABLE "legacy-grow-app_system_log" ALTER COLUMN "source" SET DATA TYPE system_log_source;--> statement-breakpoint
ALTER TABLE "legacy-grow-app_task_template" ALTER COLUMN "category" SET DATA TYPE task_category;--> statement-breakpoint
ALTER TABLE "legacy-grow-app_task" ALTER COLUMN "status" SET DATA TYPE task_status;--> statement-breakpoint
ALTER TABLE "legacy-grow-app_task" ALTER COLUMN "priority" SET DATA TYPE task_priority;--> statement-breakpoint
ALTER TABLE "legacy-grow-app_user" ALTER COLUMN "role" SET DATA TYPE user_role;--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "legacy-grow-app_plant" ADD CONSTRAINT "legacy-grow-app_plant_batch_id_legacy-grow-app_batches_id_fk" FOREIGN KEY ("batch_id") REFERENCES "public"."legacy-grow-app_batches"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
